
/*
The sequence of triangle numbers is generated by adding the 
natural numbers. So the 7th triangle number would be 
1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over 
five divisors. What is the value of the first triangle number 
to have over five hundred divisors?
*/

import java.util.List;
import java.util.ArrayList;

public class PE012 {
  public int triangularNum(int n) {
    return n * (n + 1) / 2;
  }

  public List<Integer> divisors(int n) {
    List<Integer> factors = new ArrayList<Integer>();
    if (n <= 0)
      return factors;
    factors.add(1);
    if (n == 1)
      return factors;
    factors.add(n);
    Double sqrtN = Math.sqrt(n);
    for (int i = 2; i < sqrtN; i++) {
      if (n % i == 0) {
        int L = factors.size() / 2;
        factors.add(L, i);
        factors.add(L + 1, n / i);
      }
    }
    if (sqrtN % 1 == 0) {
      int L = factors.size() / 2;
      factors.add(L, sqrtN.intValue());
    }
    return factors;
  }

  public int triangNumWithXDivisors(int X) {
    int i = 1;
    while (divisors(triangularNum(i)).size() < X) {
      i++;
    }
    return triangularNum(i);
  }

  public static void main(String[] args) {
    PE012 test = new PE012();
    // int[] testVals = { 0, 1, 2, 3, 4, 16, 28, 49 };
    // for (int i : testVals) {
    // System.out.println(test.divisors(i));
    // }
    System.out.println(test.triangNumWithXDivisors(6)); // 28
    System.out.println(test.triangNumWithXDivisors(501)); // 76576500
  }
}